{"version":3,"sources":["components/Modal/ProductModal.js","App.js","reportWebVitals.js","index.js"],"names":["ProductModal","props","useState","name","setName","price","setPrice","category","setCategory","useEffect","fetch","url","productid","then","res","json","result","Name","Price","Category","submitform","e","a","preventDefault","Id","updatedProduct","axios","method","data","JSON","stringify","headers","toast","success","onClose","window","location","reload","theme","clearWaitingQueue","catch","error","response","Message","product","Modal","size","centered","Header","closeButton","Title","id","addproduct","Body","onSubmit","Row","className","Form","Group","as","Col","Label","Control","type","placeholder","value","onChange","target","Select","Button","style","marginTop","variant","Footer","onClick","onHide","App","editProduct","setEditProduct","products","setProducts","setError","isLoaded","setIsLoaded","modalShow","setModalShow","addProduct","setAddProduct","page","setPage","ascending","pageNumbers","setPageNumbers","APIUrl","Results","TotalNumberOfPages","Table","striped","borded","hover","map","item","index","delete","swal","title","text","icon","buttons","marginBottom","show","position","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UA8IeA,EAzIM,SAACC,GACpB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAGAC,qBAAU,WACRC,MAAMT,EAAMU,IAAM,IAAMV,EAAMW,WAC3BC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLZ,EAAQY,EAAOC,MACfX,EAASU,EAAOE,OAChBV,EAAYQ,EAAOG,eAEtB,CAAClB,EAAMW,YAGV,IAAMQ,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACjBD,EAAEE,kBAGEtB,EAAMW,UAJO,uBAKTY,EAAKvB,EAAMW,UACXa,EAAiB,CACrBD,GAAIA,EACJP,KAAMd,EACNgB,SAAUZ,EACVW,MAAOb,GAVM,SAYGqB,IAAM,CACtBC,OAAQ,MACRhB,IAAKV,EAAMU,IAAM,IAAMV,EAAMW,UAC7BgB,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CAAE,eAAgB,sBAE1BlB,MAAK,WACJmB,IAAMC,QAAQ,mBAAoB,CAChCC,QAAS,kBAAMC,OAAOC,SAASC,UAC/BC,MAAO,SAETN,IAAMO,uBAEPC,OAAM,SAACC,GACNT,IAAMS,MAAMA,EAAMC,SAASd,KAAKe,YA1BrB,4CA8BTC,EAAU,CAAEzC,OAAME,QAAOE,YA9BhB,UAgCGmB,IAAM,CACtBC,OAAQ,OACRhB,IAAKV,EAAMU,IACXiB,KAAMC,KAAKC,UAAUc,GACrBb,QAAS,CAAE,eAAgB,sBAE1BlB,MAAK,WACJmB,IAAMC,QAAQ,iBAAkB,CAC9BC,QAAS,kBAAMC,OAAOC,SAASC,eAGlCG,OAAM,SAACC,GACFA,EAAMC,UACRV,IAAMS,MAAMA,EAAMC,SAASd,KAAKe,YA7CvB,2DAAH,sDAkDhB,OACE,eAACE,EAAA,EAAD,2BACM5C,GADN,IAEE6C,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EAJV,UAME,cAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,CAAaC,GAAG,gCAAhB,SACGlD,EAAMmD,WAAa,oBAAsB,2BAG9C,cAACP,EAAA,EAAMQ,KAAP,UACE,uBAAMC,SAAUlC,EAAhB,UACE,eAACmC,EAAA,EAAD,CAAKC,UAAU,OAAf,UACE,eAACC,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACH,EAAA,EAAKI,MAAN,mBACA,cAACJ,EAAA,EAAKK,QAAN,CACEN,UAAU,OACVO,KAAK,OACLC,YAAY,eACZC,MAAO9D,EACP+D,SAAU,SAAC7C,GAAD,OAAOjB,EAAQiB,EAAE8C,OAAOF,aAItC,eAACR,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CACEN,UAAU,YACVO,KAAK,SACLC,YAAY,QACZC,MAAO5D,EACP6D,SAAU,SAAC7C,GAAD,OAAOf,EAASe,EAAE8C,OAAOF,gBAKzC,cAACR,EAAA,EAAKI,MAAN,uBACA,eAACJ,EAAA,EAAKW,OAAN,CACE,aAAW,yBACXZ,UAAU,eACVS,MAAO1D,EACP2D,SAAU,SAAC7C,GAAD,OAAOb,EAAYa,EAAE8C,OAAOF,QAJxC,UAME,8DACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,kBAEF,cAACI,EAAA,EAAD,CACEC,MAAO,CACLC,UAAW,IAEbC,QAAQ,UACRT,KAAK,SALP,yBAWJ,cAAClB,EAAA,EAAM4B,OAAP,UACE,cAACJ,EAAA,EAAD,CAAQG,QAAQ,SAASE,QAASzE,EAAM0E,OAAxC,0B,+BC8DOC,MA1Lf,WACE,MAAsC1E,qBAAtC,mBAAO2E,EAAP,KAAoBC,EAApB,KAGA,EAAgC5E,mBAAS,IAAzC,mBAAO6E,EAAP,KAAiBC,EAAjB,KACA,EAA0B9E,mBAAS,MAAnC,mBAAc+E,GAAd,WACA,EAAgC/E,oBAAS,GAAzC,mBAAOgF,EAAP,KAAiBC,EAAjB,KAGA,EAAkCjF,oBAAS,GAA3C,mBAAOkF,EAAP,KAAkBC,EAAlB,KACA,EAAoCnF,oBAAS,GAA7C,mBAAOoF,EAAP,KAAmBC,EAAnB,KAGA,EAAwBrF,mBAAS,GAAjC,mBAAOsF,EAAP,KAAaC,EAAb,KACA,EAAkCvF,oBAAS,GAA3C,mBAAOwF,EAAP,KACA,GADA,KACsCxF,mBAAS,IAA/C,mBAAOyF,EAAP,KAAoBC,EAApB,KAGMC,EACJ,kEAmFF,OAhFApF,qBAAU,WACNC,MACEmF,EACE,SACAL,EAFFK,0BAMEH,GAED7E,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GACCmE,GAAY,GACZH,EAAYhE,EAAO8E,SACnBF,EAAe5E,EAAO+E,uBAGxB,SAACtD,GACC0C,GAAY,GACZF,EAASxC,QAGhB,CAAC+C,IA0DF,sBAAKhC,UAAU,MAAf,UACE,qBAAIL,GAAG,cAAP,yBACe,IACb,cAACkB,EAAA,EAAD,CAAQG,QAAQ,UAAUE,QAAS,kBAjCvCa,GAAc,QACdF,GAAa,IAgCT,4BAIF,uBACA,eAACW,EAAA,EAAD,CACEC,SAAO,EACPC,QAAM,EACNC,OAAK,EACLrD,KAAK,KACLwB,MAAO,CACLC,UAAW,IANf,UASE,gCACE,+BACE,oCACA,sCACA,uCACA,0CACA,sCACA,6CAGJ,gCACIW,EAEEH,EAASqB,KAAI,SAACC,EAAMC,GAAP,OACX,+BACE,6BAAKD,EAAK7E,KACV,6BAAK6E,EAAKpF,OACV,6BAAKoF,EAAKnF,QACV,6BAAKmF,EAAKlF,WACV,6BACE,cAACkD,EAAA,EAAD,CACEG,QAAQ,UACRE,QAAS,kBAhEJvB,EAgE0BkD,EAAK7E,GA/DtDsD,EAAe3B,GACfoC,GAAc,QACdF,GAAa,GAHf,IAAyBlC,GA8DP,oBAOF,6BACE,cAACkB,EAAA,EAAD,CACEG,QAAQ,SACRE,QAAS,WArG7B,IAAuBvE,EAAMgD,EAANhD,EAsGakG,EAAKpF,KAtGZkC,EAsGkBkD,EAAK7E,GApGlDE,IAAM6E,OAAN,UAAgBV,EAAhB,YAA0B1C,IAAMtC,MAAK,SAACC,GAEpC0F,IAAK,CACHC,MAAO,mBACPC,KACE,qBACGvD,GACH,YAFA,UAGGhD,GACH,+BACFwG,KAAM,UACNC,QAAS,WAGR/F,MAAK,SAACoD,GACL9B,OAAOC,SAASC,gBAkFN,wBAdKiE,MAFX,kBA6BR,sBAAKhC,MAAO,CAAEuC,aAAc,IAA5B,UACE,cAACxC,EAAA,EAAD,CAAQG,QAAQ,kBAAkBE,QAAS,WA/D/Ce,EAJW,GAARD,EAIKA,EAAO,EAHLG,IAkEN,2BAGA,cAACtB,EAAA,EAAD,CAAQG,QAAQ,kBAAkBE,QAAS,WA3E/Ce,EAJGD,GAAQG,EAIHH,EAAO,EAHL,IA8EN,uBAEU,IACV,wCACQA,EADR,OACkBG,QAKpB,cAAC,EAAD,CACEvC,WAAYkC,EACZ1E,UAAWiE,EACXiC,KAAM1B,EACNzE,IAAKkF,EACLlB,OAAQ,kBAAMU,GAAa,MAE7B,cAAC,IAAD,CAAgB0B,SAAS,YAAYC,UAAW,WCnLvCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtG,MAAK,YAAkD,IAA/CuG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4f889b1e.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\n\nconst ProductModal = (props) => {\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [category, setCategory] = useState(0);\n\n  //If we wish to edit a product then we request its details only once to fill in our fields\n  useEffect(() => {\n    fetch(props.url + \"/\" + props.productid)\n      .then((res) => res.json())\n      .then((result) => {\n        setName(result.Name);\n        setPrice(result.Price);\n        setCategory(result.Category);\n      });\n  }, [props.productid]);//We check to see if the id has changed, if it has we update our modal\n\n  //Function to make form submission\n  const submitform = async (e) => {\n    e.preventDefault();\n\n    //We check if this is a new product or existing product to see if we update or post\n    if (props.productid) {\n      const Id = props.productid;\n      const updatedProduct = {\n        Id: Id,\n        Name: name,\n        Category: category,\n        Price: price,\n      };\n      const res = await axios({\n        method: \"put\",\n        url: props.url + \"/\" + props.productid,\n        data: JSON.stringify(updatedProduct),\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then(() => {\n          toast.success(\"Product Updated!\", {\n            onClose: () => window.location.reload(),\n            theme: \"dark\",\n          });\n          toast.clearWaitingQueue(); //Removes any extra toasts queued up\n        })\n        .catch((error) => {\n          toast.error(error.response.data.Message);\n        });\n    } else {\n      //If it is a new product we then add it via post request\n      const product = { name, price, category };\n      //make our post request\n      const res = await axios({\n        method: \"post\",\n        url: props.url,\n        data: JSON.stringify(product),\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then(() => {\n          toast.success(\"Product added!\", {\n            onClose: () => window.location.reload(),\n          });\n        })\n        .catch((error) => {\n          if (error.response) {\n            toast.error(error.response.data.Message);\n          }\n        });\n    }\n  };\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {props.addproduct ? \"Add a new product\" : \"Edit Product Details\"}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <form onSubmit={submitform}>\n          <Row className=\"mb-3\">\n            <Form.Group as={Col}>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                className=\"name\"\n                type=\"text\"\n                placeholder=\"Product name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group as={Col}>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                className=\"formPrice\"\n                type=\"number\"\n                placeholder=\"Price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              />\n            </Form.Group>\n          </Row>\n\n          <Form.Label>Category</Form.Label>\n          <Form.Select\n            aria-label=\"Default select example\"\n            className=\"formCategory\"\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          >\n            <option>Please select a category</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n          </Form.Select>\n          <Button\n            style={{\n              marginTop: 10,\n            }}\n            variant=\"primary\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"danger\" onClick={props.onHide}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ProductModal;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Table, Button } from \"react-bootstrap\";\nimport ProductModal from \"././components/Modal/ProductModal\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport swal from \"sweetalert\";\n\nfunction App() {\n  const [editProduct, setEditProduct] = useState();\n\n  //loading, error and product states\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  //Modal states\n  const [modalShow, setModalShow] = useState(false);\n  const [addProduct, setAddProduct] = useState(true);\n\n  //Table Pagination states\n  const [page, setPage] = useState(1);\n  const [ascending, setAscending] = useState(false);\n  const [pageNumbers, setPageNumbers] = useState(0);\n\n  const pageSize = 50;\n  const APIUrl =\n    \"https://gendacproficiencytest.azurewebsites.net/API/ProductsAPI\";\n\n  // Fetching the data we wish to use, put it in descending order so new products can be seen\n  useEffect(() => {\n      fetch(\n        APIUrl +\n          \"?page=\" +\n          page +\n          \"&pageSize=\" +\n          pageSize +\n          \"&ascending=\" +\n          ascending\n      )\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            setIsLoaded(true);\n            setProducts(result.Results);\n            setPageNumbers(result.TotalNumberOfPages);\n          },\n\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        );\n  }, [page]);//Use Effect will rerun the query every time there is a change to the page numbers\n\n\n  //Function used to send a delete request to the API, to delete the specific item\n  function deleteProduct(name, id) {\n    //Here we delete the product we clicked on\n    axios.delete(`${APIUrl}/${id}`).then((res) => {\n      //After we receive the data we show an alert to let them know it has been deleted\n      swal({\n        title: \"Product Deleted!\",\n        text:\n          \"Product \" +\n          `${id}` +\n          \"\\n Name: \" +\n          `${name}` +\n          \"\\n Was successfully deleted!\",\n        icon: \"success\",\n        buttons: \"Great!\",\n      })\n        //After they close the modal we then refresh the page to get our data\n        .then((value) => {\n          window.location.reload();\n        });\n    });\n  }\n\n  //We edit our variables to get the add product variable\n  function showAddProduct() {\n    setAddProduct(true);\n    setModalShow(true);\n  }\n\n  //We edit our state variables to get the correct modal to open\n  function showEditProduct(id) {\n    setEditProduct(id);\n    setAddProduct(false);\n    setModalShow(true);\n  }\n\n  function goNextPage() {\n    //Check if we are at the end of our list if we are we loop to the front\n    if(page == pageNumbers){\n      setPage(1)\n      return\n    }\n    setPage(page + 1);\n  }\n\n  function goPreviousPage() {\n    //Check if we are at the start of our list if we are we go to the end\n    if(page == 1){\n      setPage(pageNumbers)\n      return\n    }\n    setPage(page - 1);\n  }\n\n  return (\n    <div className=\"App\">\n      <h2 id=\"Product_bar\">\n        Product List{\" \"}\n        <Button variant=\"success\" onClick={() => showAddProduct()}>\n          Add Product\n        </Button>\n      </h2>\n      <br />\n      <Table\n        striped\n        borded\n        hover\n        size=\"sm\"\n        style={{\n          marginTop: 30,\n        }}\n      >\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Category</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {!isLoaded\n            ? \"Loading...\"\n            : products.map((item, index) => (\n                <tr key={index}>\n                  <td>{item.Id}</td>\n                  <td>{item.Name}</td>\n                  <td>{item.Price}</td>\n                  <td>{item.Category}</td>\n                  <td>\n                    <Button\n                      variant=\"primary\"\n                      onClick={() => showEditProduct(item.Id)}\n                    >\n                      Edit\n                    </Button>\n                  </td>\n                  <td>\n                    <Button\n                      variant=\"danger\"\n                      onClick={() => {\n                        deleteProduct(item.Name, item.Id);\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n        </tbody>\n      </Table>\n      <div style={{ marginBottom: 30 }}>\n        <Button variant=\"outline-primary\" onClick={() => goPreviousPage()}>\n          Previous Page\n        </Button>\n        <Button variant=\"outline-primary\" onClick={() => goNextPage()}>\n          Next Page\n        </Button>{' '}\n        <div>\n          Page {page} of {pageNumbers}\n        </div>\n      </div>\n\n      {/* Below is the modal, which shows when the button is clicked a different modal is shown depending on which button is clicked */}\n      <ProductModal\n        addproduct={addProduct}\n        productid={editProduct}\n        show={modalShow}\n        url={APIUrl}\n        onHide={() => setModalShow(false)}\n      />\n      <ToastContainer position=\"top-right\" autoClose={1500} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}