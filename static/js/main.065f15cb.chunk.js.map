{"version":3,"sources":["components/Modal/ProductModal.js","App.js","reportWebVitals.js","index.js"],"names":["ProductModal","props","useState","name","setName","price","setPrice","category","setCategory","newEdit","useEffect","fetch","url","productid","then","res","json","result","Name","Price","Category","submitform","e","a","preventDefault","Id","updatedProduct","axios","method","data","JSON","stringify","headers","toast","success","onClose","window","location","reload","theme","clearWaitingQueue","catch","error","response","Message","product","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","addproduct","Body","onSubmit","Row","className","Form","Group","as","Col","Label","Control","type","placeholder","value","onChange","target","Select","aria-label","Button","style","marginTop","variant","Footer","onClick","onHide","App","editProduct","setEditProduct","products","setProducts","setError","isLoaded","setIsLoaded","modalShow","setModalShow","addProduct","setAddProduct","page","setPage","ascending","pageNumbers","setPageNumbers","APIUrl","Results","TotalNumberOfPages","Table","striped","borded","hover","map","item","index","delete","swal","title","text","icon","buttons","marginBottom","show","position","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.065f15cb.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ProductModal = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [category, setCategory] = useState(0);\r\n  const [editing, setEditing] = useState(props.newEdit);\r\n\r\n  //If we wish to edit a product then we request its details only once to fill in our fields\r\n  useEffect(() => {\r\n    fetch(props.url + \"/\" + props.productid)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setName(result.Name);\r\n        setPrice(result.Price);\r\n        setCategory(result.Category);\r\n      });\r\n  }, [props.productid]);//We check to see if the id has changed, if it has we update our modal\r\n\r\n  //Function to make form submission\r\n  const submitform = async (e) => {\r\n    e.preventDefault();\r\n\r\n    //We check if this is a new product or existing product to see if we update or post\r\n    if (props.productid) {\r\n      const Id = props.productid;\r\n      const updatedProduct = {\r\n        Id: Id,\r\n        Name: name,\r\n        Category: category,\r\n        Price: price,\r\n      };\r\n      const res = await axios({\r\n        method: \"put\",\r\n        url: props.url + \"/\" + props.productid,\r\n        data: JSON.stringify(updatedProduct),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n        .then(() => {\r\n          toast.success(\"Product Updated!\", {\r\n            onClose: () => window.location.reload(),\r\n            theme: \"dark\",\r\n          });\r\n          toast.clearWaitingQueue(); //Removes any extra toasts queued up\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error.response.data.Message);\r\n        });\r\n    } else {\r\n      //If it is a new product we then add it via post request\r\n      const product = { name, price, category };\r\n      //make our post request\r\n      const res = await axios({\r\n        method: \"post\",\r\n        url: props.url,\r\n        data: JSON.stringify(product),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n        .then(() => {\r\n          toast.success(\"Product added!\", {\r\n            onClose: () => window.location.reload(),\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          if (error.response) {\r\n            toast.error(error.response.data.Message);\r\n          }\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {props.addproduct ? \"Add a new product\" : \"Edit Product Details\"}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form onSubmit={submitform}>\r\n          <Row className=\"mb-3\">\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                className=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Product name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                className=\"formPrice\"\r\n                type=\"number\"\r\n                placeholder=\"Price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n\r\n          <Form.Label>Category</Form.Label>\r\n          <Form.Select\r\n            aria-label=\"Default select example\"\r\n            className=\"formCategory\"\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          >\r\n            <option>Please select a category</option>\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"3\">3</option>\r\n          </Form.Select>\r\n          <Button\r\n            style={{\r\n              marginTop: 10,\r\n            }}\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ProductModal;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Table, Button, Pagination } from \"react-bootstrap\";\nimport ProductModal from \"././components/Modal/ProductModal\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport swal from \"sweetalert\";\n\nfunction App() {\n  const [editProduct, setEditProduct] = useState();\n\n  //loading, error and product states\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  //Modal states\n  const [modalShow, setModalShow] = useState(false);\n  const [addProduct, setAddProduct] = useState(true);\n\n  //Table Pagination states\n  const [page, setPage] = useState(1);\n  const [ascending, setAscending] = useState(false);\n  const [pageNumbers, setPageNumbers] = useState(0);\n\n  const pageSize = 50;\n  const APIUrl =\n    \"https://gendacproficiencytest.azurewebsites.net/API/ProductsAPI\";\n\n  // Fetching the data we wish to use, put it in descending order so new products can be seen\n  useEffect(() => {\n      fetch(\n        APIUrl +\n          \"?page=\" +\n          page +\n          \"&pageSize=\" +\n          pageSize +\n          \"&ascending=\" +\n          ascending\n      )\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            setIsLoaded(true);\n            setProducts(result.Results);\n            setPageNumbers(result.TotalNumberOfPages);\n          },\n\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        );\n  }, [page]);//Use Effect will rerun the query every time there is a change to the page numbers\n\n\n  //Function used to send a delete request to the API, to delete the specific item\n  function deleteProduct(name, id) {\n    //Here we delete the product we clicked on\n    axios.delete(`${APIUrl}/${id}`).then((res) => {\n      //After we receive the data we show an alert to let them know it has been deleted\n      swal({\n        title: \"Product Deleted!\",\n        text:\n          \"Product \" +\n          `${id}` +\n          \"\\n Name: \" +\n          `${name}` +\n          \"\\n Was successfully deleted!\",\n        icon: \"success\",\n        buttons: \"Great!\",\n      })\n        //After they close the modal we then refresh the page to get our data\n        .then((value) => {\n          window.location.reload();\n        });\n    });\n  }\n\n  //We edit our variables to get the add product variable\n  function showAddProduct() {\n    setAddProduct(true);\n    setModalShow(true);\n  }\n\n  //We edit our state variables to get the correct modal to open\n  function showEditProduct(id) {\n    setEditProduct(id);\n    setAddProduct(false);\n    setModalShow(true);\n  }\n\n  function goNextPage() {\n    //Check if we are at the end of our list if we are we loop to the front\n    if(page == pageNumbers){\n      setPage(1)\n      return\n    }\n    setPage(page + 1);\n  }\n\n  function goPreviousPage() {\n    //Check if we are at the start of our list if we are we go to the end\n    if(page == 1){\n      setPage(pageNumbers)\n      return\n    }\n    setPage(page - 1);\n  }\n\n  return (\n    <div className=\"App\">\n      <h2 id=\"Product_bar\">\n        Product List{\" \"}\n        <Button variant=\"success\" onClick={() => showAddProduct()}>\n          Add Product\n        </Button>\n      </h2>\n      <br />\n      <Table\n        striped\n        borded\n        hover\n        size=\"sm\"\n        style={{\n          marginTop: 30,\n        }}\n      >\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Category</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {!isLoaded\n            ? \"Loading...\"\n            : products.map((item, index) => (\n                <tr key={index}>\n                  <td>{item.Id}</td>\n                  <td>{item.Name}</td>\n                  <td>{item.Price}</td>\n                  <td>{item.Category}</td>\n                  <td>\n                    <Button\n                      variant=\"primary\"\n                      onClick={() => showEditProduct(item.Id)}\n                    >\n                      Edit\n                    </Button>\n                  </td>\n                  <td>\n                    <Button\n                      variant=\"danger\"\n                      onClick={() => {\n                        deleteProduct(item.Name, item.Id);\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n        </tbody>\n      </Table>\n      <div style={{ marginBottom: 30 }}>\n        <Button variant=\"outline-primary\" onClick={() => goPreviousPage()}>\n          Previous Page\n        </Button>\n        <Button variant=\"outline-primary\" onClick={() => goNextPage()}>\n          Next Page\n        </Button>\n        <div>\n          Page {page} of {pageNumbers}\n        </div>\n      </div>\n\n      {/* Below is the modal, which shows when the button is clicked a different modal is shown depending on which button is clicked */}\n      <ProductModal\n        addproduct={addProduct}\n        productid={editProduct}\n        show={modalShow}\n        url={APIUrl}\n        onHide={() => setModalShow(false)}\n      />\n      <ToastContainer position=\"top-right\" autoClose={1500} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}